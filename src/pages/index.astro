---
import "../styles/global.css";

import Layout from "../layouts/Layout.astro";
import Auth from "../components/Auth.svelte";
import TokenAuth from "../components/TokenAuth.svelte";
import type {SignInResponse} from "../components/SignInForm.svelte";
import type {SignUpResponse} from "../components/SignUpForm.svelte";

// Parse hash parameters if they exist
const hashParams = new URLSearchParams(
  Astro.url.hash ? Astro.url.hash.substring(1) : ""
);

const accessToken = hashParams.get("access_token");
const refreshToken = hashParams.get("refresh_token");
const expiresIn = parseInt(hashParams.get("expires_in") || "0");
const expiresAt = parseInt(hashParams.get("expires_at") || "0");
const tokenType = hashParams.get("token_type");
const type = hashParams.get("type");

const isTokenAuth = accessToken && refreshToken && tokenType;
console.log(`isTokenAuth: ${isTokenAuth}`);
---

<Layout showTopBar={false}>
  <main class='container mx-auto px-4 py-8'>
    <h1 class='text-4xl font-bold text-center mb-8'>Welcome</h1>

    {
      isTokenAuth ? (
        <TokenAuth
          client:load
          accessToken={accessToken || ""}
          refreshToken={refreshToken || ""}
          expiresIn={expiresIn}
          expiresAt={expiresAt}
          tokenType={tokenType || ""}
          type={type || ""}
          onAuthSuccess={(data: {user: any; message: string}) => {
            console.log("User authenticated:", data.user);
            window.location.href = "/";
          }}
        />
      ) : (
        <Auth
          client:load
          onAuthSuccess={(data: SignInResponse | SignUpResponse) => {
            console.log("User authenticated:", data.user);
          }}
        />
      )
    }
  </main>
</Layout>

<style>
  main {
    min-height: 100vh;
  }
</style>
